ARG node_version
FROM node:${node_version}-alpine

ARG covalence_version
ARG dumbinit_version
ARG gosu_version
ARG sops_version

ENV COVALENCE_VERSION $covalence_version
ENV DUMBINIT_VERSION $dumbinit_version
ENV GOSU_VERSION $gosu_version
ENV GOSU_KEY B42F6819007F00F88E364FD4036A9C25BF357DD4
ENV SOPS_VERSION $sops_version

RUN set -ex; \
  \
  fetchDeps=' \
    build-base \
    bzip2 \
    ca-certificates \
    curl-dev \
    gnupg \
    libffi-dev \
    libressl-dev \
    openssl \
    procps \
    python-dev \
    ruby \
    ruby-bundler \
    ruby-dev \
    ruby-io-console \
    ruby-json \
    unzip \
    wget \
    yaml-dev \
    zlib-dev \
  '; \
  apk add --no-cache --update $fetchDeps && \
  \
  mkdir -p /tmp/build && \
  cd /tmp/build && \
  \
  # Gosu
  wget -O /tmp/build/gosu "https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-amd64"; \
  wget -O /tmp/build/gosu.asc "https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-amd64.asc"; \
  \
  ( gpg --keyserver ipv4.pool.sks-keyservers.net --receive-keys "$GOSU_KEY" \
  || gpg --keyserver ha.pool.sks-keyservers.net --receive-keys "$GOSU_KEY" ); \
  gpg --batch --verify gosu.asc gosu; \
  chmod +x gosu; \
  \
  # Dumb-init
  wget -O /tmp/build/dumb-init "https://github.com/Yelp/dumb-init/releases/download/v${DUMBINIT_VERSION}/dumb-init_${DUMBINIT_VERSION}_amd64"; \
  chmod +x dumb-init; \
  \
  # Sops
  wget -O /tmp/build/sops "https://github.com/mozilla/sops/releases/download/${SOPS_VERSION}/sops-${SOPS_VERSION}.linux"; \
  chmod +x sops;

COPY tools/covalence/Gemfile /tmp/build
COPY tools/covalence/Gemfile.lock /tmp/build
COPY tools/covalence/.gemrc /tmp/build

RUN set -ex; \
  \
  cd /tmp/build && \
  \
  # Ruby Gems
  gem install bundler --no-document  && \
  bundle install --path=/opt/gems --jobs=4 --retry=3

FROM node:${node_version}-alpine
LABEL maintainer="Unif.io, Inc. <support@unif.io>"

ARG covalence_version

ENV COVALENCE_VERSION $covalence_version
ENV BUNDLE_GEMFILE /opt/Gemfile
ENV BUNDLE_PATH /opt/gems

COPY --from=0 /tmp/build/gosu /usr/local/bin/
COPY --from=0 /tmp/build/dumb-init /usr/local/bin/
COPY --from=0 /tmp/build/sops /usr/local/bin/
COPY --from=0 /tmp/build/Gemfile /opt/
COPY --from=0 /tmp/build/Gemfile.lock /opt/
COPY --from=0 /tmp/build/.gemrc /opt/
COPY --from=0 /opt/gems /opt/gems

RUN set -ex; \
  \
  fetchDeps=' \
    ansible \
    bash \
    build-base \
    bzip2 \
    ca-certificates \
    curl \
    curl-dev \
    docker \
    git \
    gnupg \
    groff \
    jq \
    less \
    libffi-dev \
    libressl-dev \
    mercurial \
    openssl \
    openssh \
    procps \
    python-dev \
    ruby \
    ruby-bundler \
    ruby-dev \
    ruby-io-console \
    ruby-json \
    tar \
    unzip \
    zip \
    wget \
    yaml-dev \
    zlib-dev \
  '; \
  apk add --no-cache --update $fetchDeps && \
  \
  mkdir -p /tmp/build && \
  cd /tmp/build && \
  \
  # Install glibc
  wget -q -O /etc/apk/keys/sgerrand.rsa.pub "https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub" && \
  wget -q "https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.23-r3/glibc-2.23-r3.apk" && \
  apk add glibc-2.23-r3.apk && \
  \
  # Install PIP packages
  curl -O https://bootstrap.pypa.io/get-pip.py && \
  python get-pip.py && \
  pip install \
    awscli \
    docker-compose && \
  \
  # Install gem packages
  gem install bundler --no-document  && \
  bundle check --gemfile=/opt/Gemfile --path=/opt/gems || bundle install --gemfile=/opt/Gemfile --path=/opt/gems --jobs=4 --retry=3 && \
  \
  # Cleanup
  cd / && \
  rm -rf /tmp/build

COPY pkr_files/packer* /usr/local/bin/
COPY tf_files/terraform* /usr/local/bin/
COPY other_bins/* /usr/local/bin/
COPY tools/covalence/entrypoint.sh /usr/local/bin/

VOLUME /data
WORKDIR /data

ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]
CMD ["bundle","exec","rake"]
